{"version":3,"sources":["components/Roadmap.js","index.js"],"names":["nodefetch","require","csv","SHEET_ID","colorCategory","Core","Coordinated","Aligned","loadGsheet","sheetId","sheetGidNumber","a","sheetResponse","text","resultText","fromString","Roadmap","useState","data","setData","searchParam","q","setQ","filterParam","setFilterParam","search","items","filter","item","Organization","some","newItem","toString","toLowerCase","indexOf","renderCell","row","i","x","cx","width","y","height","style","fill","strokeWidth","stroke","org","orgLink","rowspan","orgLines","split","fontSize","textAnchor","map","line","l","href","target","rel","length","renderOrg","OrgLink","link","textDecoration","renderLink","Activity","Link","category","Category","transform","renderCategory","useEffect","console","log","loadData","margin","className","onChange","e","value","aria-label","Set","sort","element","index","array","key","htmlFor","type","name","id","placeholder","xmlns","dy","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.85c116c1.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport \"./style.css\";\n\nconst nodefetch = require(\"node-fetch\");\nconst csv = require(\"csvtojson\");\n\nconst SHEET_ID=\"1DOQ_NRcX5myEx9FWSjqszfVpJmFQVeuUvVLKHMyLZ9s\"\n\nconst colorCategory = {\n  Core: \"#212180\",\n  Coordinated: \"#82DBE1\",\n  Aligned: \"#FF942B\"\n}\n\nconst loadGsheet = async (sheetId, sheetGidNumber) => {\n  let sheetResponse = await nodefetch(\n    `https://docs.google.com/spreadsheets/u/1/d/${sheetId}/export?format=csv&id=${sheetId}&gid=${sheetGidNumber}`\n  );\n\n  let resultText = await sheetResponse.text();\n  return await csv().fromString(resultText);\n};\n\nfunction Roadmap() {\n  const [data, setData] = useState([]);\n  const [searchParam] = useState([\"Organization\", \"Activity\"]);\n  const [q, setQ] = useState('');\n  const [filterParam, setFilterParam] = useState([\"All\"]);\n\n  useEffect(() => {\n    async function loadData() {\n      const data = await loadGsheet(SHEET_ID, 0);\n      console.log(data);\n      console.log(\"Data loaded from GSheets\")\n      setData(data)\n    }\n    loadData();\n  }, []);\n\n\n  function search(items) {\n    // eslint-disable-next-line\n    return items.filter((item) => {\n        /* \n        //             in here we check if our organization is equal to our c state\n        // if it's equal to then only return the items that match\n        // if not return All the organizations\n        */\n        // eslint-disable-next-line\n        if (item.Organization == filterParam) {\n            return searchParam.some((newItem) => {\n                return (\n                    item[newItem]\n                        .toString()\n                        .toLowerCase()\n                        .indexOf(q.toLowerCase()) > -1\n                );\n            });\n        // eslint-disable-next-line\n        } else if (filterParam == \"All\") {\n            return searchParam.some((newItem) => {\n                return (\n                    item[newItem]\n                        .toString()\n                        .toLowerCase()\n                        .indexOf(q.toLowerCase()) > -1\n                );\n            });\n        }\n    });\n  }\n\n  function renderLink(text, link, x) {\n    if(link){\n      return <tspan x={x}><a href={link} target=\"_blank\" rel=\"noopener noreferrer\" fill=\"#212180\" style={{textDecoration: \"underline\"}}>{text}</a></tspan>\n    } else {\n      return <tspan x={x}>{text}</tspan>\n    }\n  }\n\n  function renderOrg(data, i, org, orgLink) {\n    let rowspan = 0;\n    if(i>0 && data[i-1].Organization===org){\n      // Do nothing because we have already covered this scenario\n    } else {\n      while (data[i+rowspan] && data[i+rowspan].Organization===org){\n        rowspan++;\n      }\n      let orgLines = org.split(\"\\\\n\")\n      return <>\n        <rect x=\"0\" y={`${80+(40*(i+1))}`} width=\"190\" height={30*rowspan+10*(rowspan-1)} fill=\"#2AA8A8\"/>\n        <text fontSize=\"16px\" textAnchor=\"middle\">\n          {orgLines.map(function(line, l){\n            if(orgLink){\n              line = <a href={orgLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{fill: \"white\"}}>{line}</a>\n            } \n            return <tspan x=\"100\" y={`${100+(40*(i+1))+20*(rowspan-1)+20*(l-((orgLines.length-1)*1/2))}`} style={{fill: \"white\"}}>{line}</tspan>\n          })}\n        </text>\n      </>\n    }\n  }\n\n  function renderCategory(data, i, category) {\n    let rowspan = 0;\n    if(i>0 && data[i-1].Category===category){\n      // Do nothing because we have already covered this scenario\n    } else {\n      while (data[i+rowspan] && data[i+rowspan].Category===category){\n        rowspan++;\n      }\n      return <>\n        <rect x=\"1000\" y={`${80+(40*(i+1))}`} width=\"20\" height={30*rowspan+10*(rowspan-1)} fill={colorCategory[category]}/>\n        <text fontSize=\"16px\" textAnchor=\"middle\" transform={`translate(1005,${90+(40*(i+1))+20*(rowspan-1)}) rotate(90)`} style={{fill: \"white\"}}>\n        {category}\n        </text>\n      </>\n    }\n  }\n\n  function renderCell(data, row, i){\n    let x, cx, width;\n    if (row['1']){\n      x = 200 + (1-row['1'])*190;\n      width = 190*row['1'];\n      if(row['2']){\n        width += 10 + 190*row['2']\n        if(row['3']){\n          width += 10 + 190*row['3']\n          if(row['4']){\n            width += 10 + 190*row['4']\n          }\n        }\n      } \n    } else if (row['2']) {\n        x = 400 + (1-row['2'])*190;\n        width = 190*row['2'];\n        if(row['3']){\n          width += 10 + 190*row['3']\n          if(row['4']){\n            width += 10 + 190*row['4']\n          }\n        }\n    } else if (row['3']) {\n        x = 600 + (1-row['3'])*190;\n        width = 190*row['3'];\n        if(row['4']){\n          width += 10 + 190*row['4']\n        }\n    } else if (row['4']) {\n      x = 800 + (1-row['4'])*190;\n      width = 190*row['4'];\n    }\n    cx = x + width/2;\n\n    return <>\n      <rect x={x} y={`${80+(40*(i+1))}`} width={width} height=\"30\" style={{fill: \"rgb(255,255,255)\", strokeWidth:1, stroke:\"rgb(0,0,0)\"}}/>\n      { renderOrg(data, i, row.Organization, row.OrgLink) }\n      <text x=\"300\" y={`${80+(40*(i+1))+22}`} fontSize=\"14px\" textAnchor=\"middle\">\n        { renderLink(row.Activity, row.Link, cx) }\n      </text>\n      { renderCategory(data, i, row.Category) }\n    </>\n  }\n\n  return (\n    <>\n      <div width=\"1020\" margin=\"auto\" className=\"flex-container-roadmap\">\n        <select\n        className=\"search-select\"\n      /*\n      // here we create a basic select input\n      // we set the value to the selected value\n      // and update the setFilterParam() state every time onChange is called\n      */\n        onChange={(e) => {\n        setFilterParam(e.target.value);\n         }}\n         aria-label=\"Filter Roadmap By Organization\">\n          <option value=\"All\">Filter By Organization</option>\n\n          {[...new Set(data.map(item => item.Organization))].sort().map((element, index, array) => (\n            <option key={index} value={element}>{element}</option>\n          ))}\n        </select>\n        <div className=\"search-wrapper\">\n            <label htmlFor=\"search-form\">\n                <input\n                    type=\"search\"\n                    name=\"search-form\"\n                    id=\"search-form\"\n                    className=\"search-input\"\n                    placeholder=\"Search for...\"\n                    value={q}\n                    /*\n                    // set the value of our useState q\n                    //  anytime the user types in the search box\n                    */\n                    onChange={(e) => setQ(e.target.value)}\n                />\n                <span className=\"sr-only\">Search countries here</span>\n            </label>\n        </div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"470\" height=\"120\" margin=\"auto\">\n          <g id=\"legend\">\n            <rect x=\"0\" y=\"0\"  width=\"130\" height=\"30\" fill={colorCategory['Core']}/>\n            <rect x=\"0\" y=\"40\" width=\"130\" height=\"30\" fill={colorCategory['Coordinated']}/>\n            <rect x=\"0\" y=\"80\" width=\"130\" height=\"30\" fill={colorCategory['Aligned']}/>\n            <text x=\"65\" y=\"20\" textAnchor=\"middle\" style={{fill: \"white\"}}>Core</text>\n            <text x=\"65\" y=\"60\" textAnchor=\"middle\" style={{fill: \"white\"}}>Coordinated</text>\n            <text x=\"65\" y=\"100\" textAnchor=\"middle\" style={{fill: \"white\"}}>Aligned</text>\n            <text fontSize=\"0.8em\">\n              <tspan x=\"140\" y=\"12\">Activities driven wholly by the DPGA Secretariat,</tspan>\n              <tspan x=\"140\" dy=\"1em\">usually convening or operational functions.</tspan>\n              <tspan x=\"140\" y=\"52\">Activities driven byt stakeholder in partnership</tspan>\n              <tspan x=\"140\" dy=\"1em\">or close coordination with the Secretariat.</tspan>\n              <tspan x=\"140\" y=\"92\">Activities driven by stakeholder in alignment with</tspan>\n              <tspan x=\"140\" dy=\"1em\">DPG strategic objective but independent of the Secretariat.</tspan>\n            </text>\n\n          </g>\n        </svg>\n      </div>\n\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1020\" height={150+40*search(data).length} margin=\"auto\">\n      {console.log('length',search(data).length)}\n      <g id=\"roadmap\">\n        <rect x=\"0\" y=\"0\" width=\"190\" height=\"50\" style={{fill: \"rgb(255,255,255)\", strokeWidth:1, stroke:\"#2AA8A8\"}}/>\n        <rect x=\"0\" y=\"50\" width=\"190\" height=\"50\" style={{fill: \"rgb(255,255,255)\", strokeWidth:1, stroke:\"#2AA8A8\"}}/>\n        <rect x=\"200\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\"/>\n        <rect x=\"400\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\"/>\n        <rect x=\"600\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\"/>\n        <rect x=\"800\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\"/>\n        <text textAnchor=\"middle\" style={{fill: \"#2AA8A8\"}}>\n          <tspan x=\"100\" y=\"20\">DPGA</tspan>\n          <tspan x=\"100\" dy=\"1em\">Strategic Objectives</tspan>\n          <tspan x=\"100\" y=\"70\">DPGA</tspan>\n          <tspan x=\"100\" dy=\"1em\">Organizations</tspan>\n        </text>\n        <text x=\"300\" y=\"0\" fontSize=\"13px\" textAnchor=\"middle\" style={{fill: \"white\"}}>\n          <tspan x=\"295\" dy=\"3em\">1) DPGs are discoverable,</tspan>\n          <tspan x=\"295\" dy=\"1.2em\">sustainably managed, and</tspan>\n          <tspan x=\"295\" dy=\"1.2em\">accessible</tspan>\n        </text>\n        <text x=\"500\" y=\"0\" fontSize=\"13px\" textAnchor=\"middle\" style={{fill: \"white\"}}>\n          <tspan x=\"495\" dy=\"1.5em\">2) UN-institutions, multilateral</tspan>\n          <tspan x=\"495\" dy=\"1.2em\">development banks and other</tspan>\n          <tspan x=\"495\" dy=\"1.2em\">public and private institutions</tspan>\n          <tspan x=\"495\" dy=\"1.2em\">have capacity to promote and</tspan>\n          <tspan x=\"495\" dy=\"1.2em\">support DPG adoption</tspan>\n        </text>\n        <text x=\"700\" y=\"0\" fontSize=\"13px\" textAnchor=\"middle\" style={{fill: \"white\"}}>\n          <tspan x=\"695\" dy=\"2em\">3) LMIC Governments have</tspan>\n          <tspan x=\"695\" dy=\"1.2em\">capacity to deploy, maintain</tspan>\n          <tspan x=\"695\" dy=\"1.2em\">and evolve DPGs for </tspan>\n          <tspan x=\"695\" dy=\"1.2em\">digital public infrastructure</tspan>\n        </text>\n        <text x=\"900\" y=\"0\" fontSize=\"13px\" textAnchor=\"middle\" style={{fill: \"white\"}}>\n          <tspan x=\"895\" dy=\"2em\">4) LMICs have vibrant</tspan>\n          <tspan x=\"895\" dy=\"1.2em\">commercial ecosystems</tspan>\n          <tspan x=\"895\" dy=\"1.2em\">capacity to create, maintain,</tspan>\n          <tspan x=\"895\" dy=\"1.2em\">and implement DPGs locally</tspan>\n        </text>\n        {search(data).map((element, index, array) => (\n          <Fragment key={index}>\n            <rect x=\"200\" y={`${80+(40*(index+1))}`} width=\"190\" height=\"30\" fill=\"#C2C3CC\"/>\n            <rect x=\"400\" y={`${80+(40*(index+1))}`} width=\"190\" height=\"30\" fill=\"#C2C3CC\"/>\n            <rect x=\"600\" y={`${80+(40*(index+1))}`} width=\"190\" height=\"30\" fill=\"#C2C3CC\"/>\n            <rect x=\"800\" y={`${80+(40*(index+1))}`} width=\"190\" height=\"30\" fill=\"#C2C3CC\"/>\n            { renderCell(array, array[index], index) }\n          </Fragment>\n        ))}\n      </g>\n      </svg>\n    </>\n  );\n}\n\nexport default Roadmap;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Roadmap from './components/Roadmap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Roadmap />,\n  document.querySelector('#form-content')\n);"],"sourceRoot":""}