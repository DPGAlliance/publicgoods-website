{"version":3,"sources":["components/Roadmap.js","index.js"],"names":["nodefetch","require","csv","SHEET_ID","loadGsheet","sheetId","sheetGidNumber","a","sheetResponse","text","resultText","fromString","Roadmap","useState","data","setData","searchParam","q","setQ","filterParam","setFilterParam","search","items","filter","item","Organization","some","newItem","toString","toLowerCase","indexOf","truncateText","maxLength","length","truncatedLength","substring","requiredLength","renderCell","row","i","x","cx","width","y","height","style","fill","strokeWidth","stroke","org","orgLink","rowspan","orgLines","split","fontSize","textAnchor","map","line","l","href","target","rel","renderOrg","OrgLink","link","textDecoration","renderLink","Activity","Link","textNode","document","createElement","fontFamily","textContent","body","appendChild","textWidth","getBoundingClientRect","removeChild","getWidthInTextUnits","category","Category","renderCategory","useEffect","console","log","loadData","margin","className","onChange","e","value","aria-label","Set","sort","element","index","array","key","htmlFor","type","name","id","placeholder","xmlns","marginBottom","dy","maxHeight","marginLeft","marginRight","overflowY","marginTop","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.d21ba136.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport \"./style.css\";\n\nconst nodefetch = require(\"node-fetch\");\nconst csv = require(\"csvtojson\");\n\nconst SHEET_ID = \"1DOQ_NRcX5myEx9FWSjqszfVpJmFQVeuUvVLKHMyLZ9s\";\n\nconst loadGsheet = async (sheetId, sheetGidNumber) => {\n  let sheetResponse = await nodefetch(\n    `https://docs.google.com/spreadsheets/u/1/d/${sheetId}/export?format=csv&id=${sheetId}&gid=${sheetGidNumber}`\n  );\n\n  let resultText = await sheetResponse.text();\n  return await csv().fromString(resultText);\n};\n\nfunction Roadmap() {\n  const [data, setData] = useState([]);\n  const [searchParam] = useState([\"Organization\", \"Activity\"]);\n  const [q, setQ] = useState(\"\");\n  const [filterParam, setFilterParam] = useState([\"All\"]);\n\n  useEffect(() => {\n    async function loadData() {\n      const data = await loadGsheet(SHEET_ID, 0);\n      console.log(data);\n      console.log(\"Data loaded from GSheets\");\n      setData(data);\n    }\n    loadData();\n  }, []);\n\n  function search(items) {\n    // eslint-disable-next-line\n    return items.filter((item) => {\n      /* \n        //             in here we check if our organization is equal to our c state\n        // if it's equal to then only return the items that match\n        // if not return All the organizations\n        */\n      // eslint-disable-next-line\n      if (item.Organization == filterParam) {\n        return searchParam.some((newItem) => {\n          return (\n            item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n          );\n        });\n        // eslint-disable-next-line\n      } else if (filterParam == \"All\") {\n        return searchParam.some((newItem) => {\n          return (\n            item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n          );\n        });\n      }\n    });\n  }\n\n  function truncateText(text, maxLength) {\n    if (text.length + 17 > maxLength) {\n      const truncatedText = `${text.substring(0, maxLength - 18)}...`;\n      const truncatedLength = truncatedText.length;\n      const requiredLength = maxLength - truncatedLength;\n      return requiredLength > 15.1 && requiredLength < 15.16\n        ? `${text.substring(0, truncatedLength + 10)}...`\n        : `${text.substring(0, truncatedLength - 3)}...`;\n    } else {\n      return text;\n    }\n  }\n  function renderLink(text, link, x, width) {\n    if (link) {\n      return (\n        <tspan x={x}>\n          <a\n            href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            fill=\"#212180\"\n            style={{ textDecoration: \"underline\" }}\n          >\n            {truncateText(text, width)}\n          </a>\n          <title>{text}</title>\n        </tspan>\n      );\n    } else {\n      return (\n        <tspan x={x}>\n          {truncateText(text, width)}\n          <title>{text}</title>\n        </tspan>\n      );\n    }\n  }\n\n  function renderOrg(data, i, org, orgLink) {\n    let rowspan = 0;\n    if (i > 0 && data[i - 1].Organization === org) {\n      // Do nothing because we have already covered this scenario\n    } else {\n      while (data[i + rowspan] && data[i + rowspan].Organization === org) {\n        rowspan++;\n      }\n      let orgLines = org.split(\"\\\\n\");\n      return (\n        <>\n          <rect\n            x=\"0\"\n            y={`${80 + 40 * (i + 1)}`}\n            width=\"190\"\n            height={30 * rowspan + 10 * (rowspan - 1)}\n            fill=\"#2AA8A8\"\n          />\n          <text fontSize=\"16px\" textAnchor=\"middle\">\n            {orgLines.map(function (line, l) {\n              if (orgLink) {\n                line = (\n                  <a\n                    href={orgLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ fill: \"white\" }}\n                  >\n                    {line}\n                  </a>\n                );\n              }\n              return (\n                <tspan\n                  x=\"100\"\n                  y={`${\n                    100 +\n                    40 * (i + 1) +\n                    20 * (rowspan - 1) +\n                    20 * (l - ((orgLines.length - 1) * 1) / 2)\n                  }`}\n                  style={{ fill: \"white\" }}\n                >\n                  {line}\n                </tspan>\n              );\n            })}\n          </text>\n        </>\n      );\n    }\n  }\n\n  function renderCategory(data, i, category) {\n    let rowspan = 0;\n    if (i > 0 && data[i - 1].Category === category) {\n      // Do nothing because we have already covered this scenario\n    } else {\n      while (data[i + rowspan] && data[i + rowspan].Category === category) {\n        rowspan++;\n      }\n    }\n  }\n  function getWidthInTextUnits(width) {\n    const text = \"Lorem ipsum dolor sit amet\";\n    const textNode = document.createElement(\"span\");\n    textNode.style.fontSize = \"12px\";\n    textNode.style.fontFamily = \"sans-serif\";\n    textNode.textContent = text;\n    document.body.appendChild(textNode);\n    const textWidth = textNode.getBoundingClientRect().width;\n    document.body.removeChild(textNode);\n    const ratio = textWidth / text.length;\n    return width / ratio;\n  }\n\n  function renderCell(data, row, i) {\n    let x, cx, width;\n    if (row[\"1\"]) {\n      x = 200 + (1 - row[\"1\"]) * 190;\n      width = 190 * row[\"1\"];\n      if (row[\"2\"]) {\n        width += 10 + 190 * row[\"2\"];\n        if (row[\"3\"]) {\n          width += 10 + 190 * row[\"3\"];\n          if (row[\"4\"]) {\n            width += 10 + 190 * row[\"4\"];\n          }\n        }\n      }\n    } else if (row[\"2\"]) {\n      x = 400 + (1 - row[\"2\"]) * 190;\n      width = 190 * row[\"2\"];\n      if (row[\"3\"]) {\n        width += 10 + 190 * row[\"3\"];\n        if (row[\"4\"]) {\n          width += 10 + 190 * row[\"4\"];\n        }\n      }\n    } else if (row[\"3\"]) {\n      x = 600 + (1 - row[\"3\"]) * 190;\n      width = 190 * row[\"3\"];\n      if (row[\"4\"]) {\n        width += 10 + 190 * row[\"4\"];\n      }\n    } else if (row[\"4\"]) {\n      x = 800 + (1 - row[\"4\"]) * 190;\n      width = 190 * row[\"4\"];\n    }\n    cx = x + width / 2;\n\n    return (\n      <>\n        <rect\n          x={x}\n          y={`${80 + 40 * (i + 1)}`}\n          width={width}\n          height=\"30\"\n          style={{\n            fill: \"rgb(255,255,255)\",\n            strokeWidth: 1,\n            stroke: \"rgb(0,0,0)\",\n          }}\n        />\n        {renderOrg(data, i, row.Organization, row.OrgLink)}\n        <text\n          x=\"300\"\n          y={`${80 + 40 * (i + 1) + 22}`}\n          fontSize=\"14px\"\n          textAnchor=\"middle\"\n        >\n          {renderLink(row.Activity, row.Link, cx, getWidthInTextUnits(width))}\n        </text>\n        {renderCategory(data, i, row.Category)}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div width=\"1020\" margin=\"auto\" className=\"flex-container-roadmap\">\n        <select\n          className=\"search-select\"\n          /*\n      // here we create a basic select input\n      // we set the value to the selected value\n      // and update the setFilterParam() state every time onChange is called\n      */\n          onChange={(e) => {\n            setFilterParam(e.target.value);\n          }}\n          aria-label=\"Filter Roadmap By Organization\"\n        >\n          <option value=\"All\">Filter By Organization</option>\n\n          {[...new Set(data.map((item) => item.Organization))]\n            .sort()\n            .map((element, index, array) => (\n              <option key={index} value={element}>\n                {element}\n              </option>\n            ))}\n        </select>\n        <div className=\"search-wrapper\">\n          <label htmlFor=\"search-form\">\n            <input\n              type=\"search\"\n              name=\"search-form\"\n              id=\"search-form\"\n              className=\"search-input\"\n              placeholder=\"Search for...\"\n              value={q}\n              /*\n                    // set the value of our useState q\n                    //  anytime the user types in the search box\n                    */\n              onChange={(e) => setQ(e.target.value)}\n            />\n            <span className=\"sr-only\">Search countries here</span>\n          </label>\n        </div>\n      </div>\n      <div style={{ width: \"100%\" }}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1020\"\n          height=\"100\"\n          style={{ marginBottom: \"10px\" }}\n        >\n          {console.log(\"length\", search(data).length)}\n          <g id=\"roadmap\">\n            <rect\n              x=\"0\"\n              y=\"0\"\n              width=\"190\"\n              height=\"50\"\n              style={{\n                fill: \"rgb(255,255,255)\",\n                strokeWidth: 1,\n                stroke: \"#2AA8A8\",\n              }}\n            />\n            <rect\n              x=\"0\"\n              y=\"50\"\n              width=\"190\"\n              height=\"50\"\n              style={{\n                fill: \"rgb(255,255,255)\",\n                strokeWidth: 1,\n                stroke: \"#2AA8A8\",\n              }}\n            />\n            <rect x=\"200\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\" />\n            <rect x=\"400\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\" />\n            <rect x=\"600\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\" />\n            <rect x=\"800\" y=\"0\" width=\"190\" height=\"100\" fill=\"#212180\" />\n            <text textAnchor=\"middle\" style={{ fill: \"#2AA8A8\" }}>\n              <tspan x=\"100\" y=\"20\">\n                DPGA\n              </tspan>\n              <tspan x=\"100\" dy=\"1em\">\n                Strategic Objectives\n              </tspan>\n              <tspan x=\"100\" y=\"70\">\n                DPGA\n              </tspan>\n              <tspan x=\"100\" dy=\"1em\">\n                Organizations\n              </tspan>\n            </text>\n            <text\n              x=\"300\"\n              y=\"0\"\n              fontSize=\"13px\"\n              textAnchor=\"middle\"\n              style={{ fill: \"white\" }}\n            >\n              <tspan x=\"295\" dy=\"3em\">\n                1) DPGs are discoverable,\n              </tspan>\n              <tspan x=\"295\" dy=\"1.2em\">\n                sustainably managed, and\n              </tspan>\n              <tspan x=\"295\" dy=\"1.2em\">\n                accessible\n              </tspan>\n            </text>\n            <text\n              x=\"500\"\n              y=\"0\"\n              fontSize=\"13px\"\n              textAnchor=\"middle\"\n              style={{ fill: \"white\" }}\n            >\n              <tspan x=\"495\" dy=\"1.5em\">\n                2) UN-institutions, multilateral\n              </tspan>\n              <tspan x=\"495\" dy=\"1.2em\">\n                development banks and other\n              </tspan>\n              <tspan x=\"495\" dy=\"1.2em\">\n                public and private institutions\n              </tspan>\n              <tspan x=\"495\" dy=\"1.2em\">\n                have capacity to promote and\n              </tspan>\n              <tspan x=\"495\" dy=\"1.2em\">\n                support DPG adoption\n              </tspan>\n            </text>\n            <text\n              x=\"700\"\n              y=\"0\"\n              fontSize=\"13px\"\n              textAnchor=\"middle\"\n              style={{ fill: \"white\" }}\n            >\n              <tspan x=\"695\" dy=\"2em\">\n                3) LMIC Governments have\n              </tspan>\n              <tspan x=\"695\" dy=\"1.2em\">\n                capacity to deploy, maintain\n              </tspan>\n              <tspan x=\"695\" dy=\"1.2em\">\n                and evolve DPGs for{\" \"}\n              </tspan>\n              <tspan x=\"695\" dy=\"1.2em\">\n                digital public infrastructure\n              </tspan>\n            </text>\n            <text\n              x=\"900\"\n              y=\"0\"\n              fontSize=\"13px\"\n              textAnchor=\"middle\"\n              style={{ fill: \"white\" }}\n            >\n              <tspan x=\"895\" dy=\"2em\">\n                4) LMICs have vibrant\n              </tspan>\n              <tspan x=\"895\" dy=\"1.2em\">\n                commercial ecosystems\n              </tspan>\n              <tspan x=\"895\" dy=\"1.2em\">\n                capacity to create, maintain,\n              </tspan>\n              <tspan x=\"895\" dy=\"1.2em\">\n                and implement DPGs locally\n              </tspan>\n            </text>\n          </g>\n        </svg>\n\n        <div\n          style={{\n            maxHeight: \"800\",\n            width: \"1020\",\n            marginBottom: \"50px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1020\"\n            height={150 + 40 * search(data).length}\n            style={{ marginTop: \"-100px\" }}\n          >\n            {console.log(\"length\", search(data).length)}\n            <g id=\"roadmap-scroll\">\n              {search(data).map((element, index, array) => (\n                <Fragment key={index}>\n                  <rect\n                    x=\"200\"\n                    y={`${80 + 40 * (index + 1)}`}\n                    width=\"190\"\n                    height=\"30\"\n                    fill=\"#C2C3CC\"\n                  />\n                  <rect\n                    x=\"400\"\n                    y={`${80 + 40 * (index + 1)}`}\n                    width=\"190\"\n                    height=\"30\"\n                    fill=\"#C2C3CC\"\n                  />\n                  <rect\n                    x=\"600\"\n                    y={`${80 + 40 * (index + 1)}`}\n                    width=\"190\"\n                    height=\"30\"\n                    fill=\"#C2C3CC\"\n                  />\n                  <rect\n                    x=\"800\"\n                    y={`${80 + 40 * (index + 1)}`}\n                    width=\"190\"\n                    height=\"30\"\n                    fill=\"#C2C3CC\"\n                  />\n                  {renderCell(array, array[index], index)}\n                </Fragment>\n              ))}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Roadmap;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Roadmap from './components/Roadmap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Roadmap />,\n  document.querySelector('#form-content')\n);"],"sourceRoot":""}