{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","sdg_labels","types","sdgs","trunc","str","n","length","substr","Filters","props","state","liked","count","handleChange","bind","toggleVisible","event","checkboxId","target","id","split","elems","document","getElementsByClassName","i","display","checked","concurrentClasses","className","trim","filter","a","intersection","intersectionSet","includes","j","getElementById","intersectionSet1","intersectionSet2","intersection1","intersection2","style","this","countActive","parent","splits","nodeName","parentNode","transform","getElementsByTagName","setState","nominees","onClick","viewBox","xmlns","strokeLinejoin","strokeLinecap","strokeWidth","d","stroke","fill","Form","map","label","index","Check","key","type","defaultChecked","onChange","Component","ListItem","name","item","hasOwnProperty","website","href","rel","repositoryURL","license","itemClass","SDGs","k","licenseURL","spdx","description","dangerouslySetInnerHTML","__html","githubActivity","List","ReactDOM","render","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c57b55d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Form from 'react-bootstrap/Form';\n\nimport nominees from './nominees.json';\n\nconst sdg_labels = [\"1. No Poverty\",\"2. Zero Hunger\",\"3. Good Health and Well-being\",\"4. Quality Education\",\"5. Gender Equality\",\"6. Clean Water and Sanitation\",\"7. Affordable and Clean Energy\",\"8. Decent Work and Economic Growth\",\"9. Industry, Innovation and Infrastructure\",\"10. Reduced Inequality\",\"11. Sustainable Cities and Communities\",\"12. Responsible Consumption and Production\",\"13. Climate Action\",\"14. Life Below Water\",\"15. Life on Land\",\"16. Peace and Justice Strong Institutions\",\"17. Partnerships to achieve the Goal\"]\nconst types = [\"software\", \"data\", \"content\", \"standard\"];\nconst sdgs = [\"sdg1\", \"sdg2\", \"sdg3\", \"sdg4\", \"sdg5\", \"sdg6\", \"sdg7\", \"sdg8\", \"sdg9\", \"sdg10\", \"sdg11\", \"sdg12\", \"sdg13\", \"sdg14\", \"sdg15\", \"sdg16\", \"sdg17\"];\n\nfunction trunc(str, n){\n    return (str.length > n) ? str.substr(0, n-1) + '...' : str;\n};\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { liked: false, count: 0};\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleVisible = this.toggleVisible.bind(this);\n\n  }\n\n  handleChange(event) {\n    const checkboxId = event.target.id.split('-')[0];\n    // console.log(checkboxId);\n    // console.log(event.target.checked);\n    var elems = document.getElementsByClassName(checkboxId);\n\n    for(let i=0; i < elems.length; i++) {\n      let display = event.target.checked;\n      let concurrentClasses = elems[i].className.trim().split(' ').filter(function(a){ return a !== checkboxId });\n\n      let intersection;\n      if(display){\n        let intersectionSet;\n        if(types.includes(checkboxId)) {\n          intersectionSet = concurrentClasses.filter(i => sdgs.includes(i));\n        } else {\n          intersectionSet = concurrentClasses.filter(i => types.includes(i));\n        }\n\n        intersection = false;\n        for(let j=0; j < intersectionSet.length; j++) {\n          if(document.getElementById(intersectionSet[j]+'-checkbox').checked){\n            intersection = true; \n            break;\n          }\n        }\n      } else {\n        let intersectionSet1 = concurrentClasses.filter(i => types.includes(i));\n        let intersectionSet2 = concurrentClasses.filter(i => sdgs.includes(i));\n        \n        let intersection1 = false        \n        for(let j=0; j < intersectionSet1.length; j++) {\n          if(document.getElementById(intersectionSet1[j]+'-checkbox').checked){\n            intersection1 = true; \n            break;\n          }\n        }\n        let intersection2 = false        \n        for(let j=0; j < intersectionSet2.length; j++) {\n          if(document.getElementById(intersectionSet2[j]+'-checkbox').checked){\n            intersection2 = true; \n            break;\n          }\n        }\n        intersection = intersection1 && intersection2;\n      }\n\n    \tif (intersection) {\n\t    \telems[i].style.display = 'table-row';\n    \t} else {\n    \t\telems[i].style.display = 'none';\n    \t}\n    }\n    this.countActive();\n  }\n\n  toggleVisible(event) {\n  \tlet parent;\n  \tif(event.target.nodeName === 'path') {\n  \t\tparent = event.target.parentNode.parentNode;\n  \t} else if (event.target.nodeName === 'svg') {\n  \t\tparent = event.target.parentNode;\n  \t} else {\n      parent = event.target;\n    }\n  \tlet splits = parent.id.split('-');\n  \tif(parent.style.transform === ''){\n  \t\tparent.style.transform = 'rotate(180deg)';\n  \t\tdocument.getElementById(splits[0]+'-options').style.display='none';\n  \t} else {\n  \t\tparent.style.transform = '';\n  \t\tdocument.getElementById(splits[0]+'-options').style.display='block';\n  \t}\n  }\n\n  componentDidMount() {\n  \tthis.countActive();\n  }\n\n  countActive() {\n  \tconst elems = document.getElementById('mytable').getElementsByTagName('tr');\n  \tlet count = 0;\n  \tfor(let i=0; i<elems.length; i++) {\n  \t\tif(elems[i].style.display !== 'none'){\n  \t\t\tcount++;\n  \t\t}\n  \t}\n  \tthis.setState({count: count-1});\n  }\n\n  render() {\n      return (\n        <div>\n        \t<div className=\"filterSection\">\n        \t\t<p>Displaying {this.state.count} of <b>{nominees.length}</b> nominees</p>\n        \t</div>\n\n        \t<div className=\"filterSection\">\n\t\t        <div className=\"filterSectionTitle\">\n\t\t           <p className=\"filter_header\">type</p>\n\t\t           <div className=\"icon\" onClick={this.toggleVisible} id=\"type-toggle\">\n\t\t           \t<svg viewBox=\"0 0 8 5\" xmlns=\"http://www.w3.org/2000/svg\" strokeLinejoin=\"round\" strokeLinecap=\"round\" strokeWidth=\"1.35\">\n\t\t           \t\t<path d=\"M7 1.053L4.027 4 1 1\" stroke=\"currentColor\" fill=\"none\"></path>\n\t\t           \t</svg>\n\t\t           </div>\n\t\t        </div>\n\t\t        <div className=\"filteredContent\" id=\"type-options\">\n\t\t            <Form>\n\t\t              {types.map((label, index) => (\n\t\t              <Form.Check \n\t\t              \tkey={index}\n\t\t                type='checkbox'\n\t\t                id={`${label}-checkbox`}\n\t\t                label={trunc(label,25)}\n\t\t                defaultChecked\n\t\t                onChange = {this.handleChange}\n\t\t              />\n\t\t              ))}\n\t\t            </Form>\n\t\t        </div>\n\t\t    </div>\n\n        \t<div className=\"filterSection\">\n\t        \t<div className=\"filterHead\">\n\t\t          <div className=\"filterSectionTitle\">\n\t\t           <p className=\"filter_header\">SDG</p>\n\t\t           <div className=\"icon\" onClick={this.toggleVisible} id=\"sdg-toggle\">\n\t\t           \t<svg viewBox=\"0 0 8 5\" xmlns=\"http://www.w3.org/2000/svg\" strokeLinejoin=\"round\" strokeLinecap=\"round\" strokeWidth=\"1.35\">\n\t\t           \t\t<path d=\"M7 1.053L4.027 4 1 1\" stroke=\"currentColor\" fill=\"none\"></path>\n\t\t           \t</svg>\n\t\t           </div>\n\t\t          </div>\n\t\t        </div>\n\t\t        <div className=\"filteredContent\" id=\"sdg-options\">\n\t\t            <Form>\n\t\t              {sdg_labels.map((label, index) => (\n\t\t              <Form.Check \n\t\t              \tkey={index}\n\t\t                type='checkbox'\n\t\t                id={`sdg${index+1}-checkbox`}\n\t\t                label={trunc(label, 25)}\n\t\t                defaultChecked\n\t\t                onChange = {this.handleChange}\n\t\t              />\n\t\t              ))}\n\t\t            </Form>\n\t\t        </div>\n\t\t    </div>\n\t\t   \n\t    </div>\n        ); \n  }\n}\n\nfunction ListItem(props){\n\n\tlet item = props.item;\n\tlet index = props.index;\n\n\tlet name;\n\tif(item.hasOwnProperty('website') && item.website !== '') {\n      name = <a href={item.website} target=\"_blank\" rel=\"noopener noreferrer\">{item.name}</a>;\n    } else if(item.hasOwnProperty('repositoryURL') && item.repositoryURL !== '') {\n      name = <a href={item.repositoryURL} target=\"_blank\" rel=\"noopener noreferrer\">{item.name}</a>;\n    } else {\n      name = item.name\n    }\n\n    let itemClass='';\n    for (var j=0; j<item.SDGs.length; j++) {\n     \titemClass += 'sdg'+item.SDGs[j][0]+' '\n    }\n\n    for (var k=0; k<item.type.length; k++) {\n    \titemClass += item.type[k] + ' ';\n    }\n\n    let license;\n    for (let j=0; j<item.license.length; j++) {\n      license = <a href={item.license[j].licenseURL} target=\"_blank\" rel=\"noopener noreferrer\">{item.license[j].spdx} </a>\n    }\n\n\treturn(\n\t\t<tr key={index} className={itemClass}>\n\t\t\t<td>{name}</td>\n\t\t\t<td>{item.description}</td>\n\t\t\t<td>{license}</td>\n\t\t\t<td><div dangerouslySetInnerHTML={{__html: item.githubActivity}} /></td>\n\t\t</tr>\n\t)\n\n}\n\nclass List extends Component {\n  render() {\n    return(\n        <table className=\"table\"> \n        \t<thead>\n    \t\t\t\t<tr>\n    \t\t\t\t\t<th>Nominee</th>\n    \t\t\t\t\t<th>Description</th>\n    \t\t\t\t\t<th>License</th>\n    \t\t\t\t\t<th>Past year of activity</th>\n    \t\t\t\t</tr>\n          </thead>\n          <tbody>\n    \t\t\t\t{nominees.map((item, index) => (\n    \t\t\t\t\t<ListItem item={item} index={index} key={index}/>\n    \t\t\t\t))}\n          </tbody>\n        </table>\n      )\n  }\n}\n\nReactDOM.render(<List />, document.querySelector('#mytable'));\nReactDOM.render(<Filters />, document.querySelector('#filters'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}